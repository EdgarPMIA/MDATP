//Unpatched Third Party Software - Find all unpatched 3rd party software: query DeviceTvmSoftwareVulnerabilitiesKB,
//and DeviceTvmSoftwareInventoryVulnerabilities TVM tables for all software with CVEs, then finds occurrences of any 
//software that does not have a CVE associated with it to use for latest non vulnerable version and joins all tables
//so output shows the vulnerability and if there are non vulnerable versions present in the tenant on any machine,
//if so displays latest non vulnerable version
//jesse.esquivel@microsoft.com
let CVEs = DeviceTvmSoftwareVulnerabilitiesKB
    | project CveId, IsExploitAvailable, PublishedDate, VulnerabilityDescription;
let latestVersions = DeviceTvmSoftwareInventoryVulnerabilities
    | where SoftwareVendor != "microsoft"
    | where isempty(CveId)
    | summarize arg_max(parse_version(SoftwareVersion), SoftwareVersion) by SoftwareName
    | project SoftwareName, LatestSoftVersionInstalledInTenant = SoftwareVersion;
let deviceVulnerabilities = DeviceTvmSoftwareInventoryVulnerabilities
| where SoftwareVendor != "microsoft"
| summarize arg_max(DeviceId, DeviceName, SoftwareVendor, SoftwareName, SoftwareVersion, VulnerabilitySeverityLevel) by CveId;
latestVersions
| join kind=inner (deviceVulnerabilities) on SoftwareName
| join kind=inner (CVEs) on CveId
| project CveId, VulnerabilitySeverityLevel, IsExploitAvailable, SoftwareVendor, SoftwareName, SoftwareVersion, LatestSoftVersionInstalledInTenant, PublishedDate, VulnerabilityDescription
